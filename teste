param_grid_rf_expanded = {
    'n_estimators': [100, 200],  # Experimente com mais árvores
    'max_depth': [None, 10, 20, 30],  # Adiciona mais opções de profundidade
    'min_samples_split': [2, 5, 10],  # Varia o mínimo para dividir um nó
    'min_samples_leaf': [1, 2, 4],  # Testa diferentes mínimos para um nó folha
    'max_features': ['auto', 'sqrt', 'log2'],  # Varia as características consideradas para o melhor split
    'bootstrap': [True, False],  # Considera tanto bootstrapping quanto o uso de toda a dataset
    'criterion': ['gini', 'entropy']  # Testa diferentes critérios
}


grid_search_rf_expanded = GridSearchCV(RandomForestClassifier(), param_grid_rf_expanded, cv=5, scoring='accuracy', n_jobs=-1)
grid_search_rf_expanded.fit(X_train, y_train)


print("Random Forest (Expandido) - Melhores parâmetros:", grid_search_rf_expanded.best_params_)
print("Random Forest (Expandido) - Melhor acurácia:", grid_search_rf_expanded.best_score_)
